{"version":3,"sources":["services/api.service.ts","contexts/apiContextProvider.tsx","pages/Home/Gallery.tsx","redux/hooks.ts","components/Nav.tsx","pages/SignUp/index.tsx","pages/LogIn/index.tsx","pages/Home/Table.tsx","pages/Home/index.tsx","App.tsx","redux/actionTypes.ts","redux/reducers/auth.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["ApiServiceImpl","url","apiUrl","apiToken","options","this","headers","Authorization","undefined","method","data","locale","isMultipart","contentType","settings","merge","body","JSON","stringify","toUpper","Accept","omit","endpoint","queryParams","indexOf","queryString","response","json","jsonError","errorMessage","console","log","message","description","status","statusText","Error","Promise","resolve","reject","ok","then","catch","error","endpointUrl","fetch","credentials","checkStatus","convertToJson","parseEndpoint","parsedOptions","parseOptions","request","window","open","apiService","process","ApiContext","React","ApiContextProvider","props","children","Provider","value","Container","styled","div","Image","img","Gallery","useContext","useState","image","setImage","selectedImageId","getImage","useCallback","a","get","images","buffer","imagefile","Body","b64","Buffer","from","toString","mimeType","ContentType","useEffect","alt","src","useAppDispatch","useDispatch","useAppSelector","useSelector","StyledNav","nav","Text","BlueText","Nav","auth","state","dispatch","logout","post","type","className","to","authenticated","NavDropdown","id","title","username","Item","onClick","FormSection","InsideContainer","Header","span","SignUpPage","useForm","register","handleSubmit","errors","formState","failed","setFailed","onSubmit","password","payload","htmlFor","required","style","color","fontSize","Button","size","LoginPage","Headers","thead","Cell","td","Row","tr","Table","table","ImageTable","setSelectedImageId","columns","useMemo","accessor","useTable","initialState","pageIndex","useGlobalFilter","useFilters","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","pageSize","map","headerGroup","getHeaderGroupProps","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","original","cells","cell","getCellProps","disabled","length","defaultValue","onChange","e","newpage","target","Number","width","pageSizes","Frame","HomePage","imageData","setImageData","loading","setLoading","getStaticData","formData","FormData","append","file","res","accept","placeholder","App","path","exact","component","Home","LogIn","SignUp","LOGIN","LOGOUT","action","combineReducers","store","createStore","rootReducer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97b6b708.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable semi-style */\nimport 'isomorphic-fetch';\nimport { stringify } from 'qs';\nimport { omit, merge, toUpper } from 'lodash';\n\nexport type Data =\n  | string\n  | object\n  | Blob\n  | ArrayBufferView\n  | ArrayBuffer\n  | FormData\n  | URLSearchParams\n  | ReadableStream<Uint8Array>\n  | null\n  | undefined;\n\nexport interface Settings {\n  method?: string;\n  headers?: string[][] | Record<string, string> | undefined;\n  body?:\n    | string\n    | Blob\n    | ArrayBufferView\n    | ArrayBuffer\n    | FormData\n    | URLSearchParams\n    | ReadableStream<Uint8Array>\n    | null\n    | undefined;\n  contentType?: string;\n}\n\nexport interface ParseOptions extends Settings {\n  data?: Data;\n  locale?: string;\n  contentType?: string;\n  defaultUrl?: string;\n}\n\nexport interface ApiService {\n  apiUrl: string;\n  apiToken?: string;\n  options?: RequestInit;\n  setToken: (token: string) => void;\n  unsetToken: () => void;\n  get: (endpoint: string, queryParams: object, options?: Settings) => {};\n  post: (endpoint: string, data: Data, options?: Settings) => {};\n  put: (endpoint: string, data: Data, options?: Settings) => {};\n  patch: (endpoint: string, data: Data, options?: Settings) => {};\n  delete: (endpoint: string, options: Settings) => {};\n  download: (endpoint: string, options: Settings) => {};\n}\n\nclass ApiServiceImpl implements ApiService {\n  public apiUrl: string;\n\n  public apiToken: string;\n\n  public options: { [name: string]: any };\n\n  constructor(url: string) {\n    this.apiUrl = url;\n    this.apiToken = '';\n    this.options = {};\n  }\n\n  public setToken(apiToken: string) {\n    this.apiToken = apiToken;\n\n    this.options.headers = {\n      ...this.options.headers,\n      Authorization: `Bearer ${apiToken}`,\n    };\n  }\n\n  public unsetToken() {\n    this.options.headers = {\n      ...this.options.headers,\n      Authorization: undefined,\n    };\n  }\n\n  private parseOptions({\n    method = 'get',\n    data,\n    locale,\n    ...options\n  }: ParseOptions) {\n    // If request is multipart, adjust content type\n    const isMultipart = options.contentType === 'multipart/form-data';\n\n    const settings: RequestInit = merge(\n      {\n        body: data ? JSON.stringify(data) : undefined,\n        method: toUpper(method),\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Accept-Language': locale,\n        },\n      },\n      options\n    );\n\n    if (isMultipart) {\n      settings.body = data as FormData;\n      settings.headers = omit(settings.headers, ['Content-Type']) as Record<\n        string,\n        string\n      >;\n    }\n\n    return settings;\n  }\n\n  private parseEndpoint(endpoint: string, queryParams?: object) {\n    const url =\n      endpoint.indexOf('http') === 0 ? endpoint : `${this.apiUrl}${endpoint}`;\n    const queryString = queryParams ? `?${stringify(queryParams)}` : '';\n    return `${url}${queryString}`;\n  }\n\n  private convertToJson(response: Response) {\n    try {\n      const result = response.json();\n      return result;\n    } catch (jsonError) {\n      console.log(jsonError);\n      let errorMessage;\n      if (jsonError.message && jsonError.description) {\n        errorMessage = `${jsonError.message}, ${jsonError.description}.`;\n      } else if (jsonError.message) {\n        errorMessage = `${jsonError.message}`;\n      } else {\n        errorMessage = `${response.status} ${response.statusText}`;\n      }\n      const error = new Error(errorMessage);\n      throw error;\n    }\n  }\n\n  public checkStatus(response: Response): Promise<Response> {\n    return new Promise((resolve, reject) => {\n      if (response.ok) return resolve(response);\n\n      return response\n        .json()\n        .then((jsonError) => {\n          let errorMessage;\n          if (jsonError.message && jsonError.description) {\n            errorMessage = `${jsonError.message}, ${jsonError.description}.`;\n          } else if (jsonError.message) {\n            errorMessage = `${jsonError.message}`;\n          } else {\n            errorMessage = `${response.status} ${response.statusText}`;\n          }\n          // eslint-disable-next-line no-param-reassign\n          jsonError.message = errorMessage;\n          reject(jsonError);\n        })\n        .catch(() => {\n          const error = new Error(`${response.status} ${response.statusText}`);\n          reject(error);\n        });\n    });\n  }\n\n  private async request(endpointUrl: string, options: RequestInit = {}) {\n    return fetch(endpointUrl, {\n      ...options,\n      credentials: 'include', // required for httpOnly cookie\n    })\n      .then(this.checkStatus)\n      .then(this.convertToJson);\n  }\n\n  public async get(endpoint: string, queryParams?: object, options?: Settings) {\n    const url = this.parseEndpoint(endpoint, queryParams);\n    const parsedOptions = this.parseOptions({\n      method: 'get',\n      ...options,\n    });\n    return this.request(url, parsedOptions);\n  }\n\n  public async post(endpoint: string, data: Data, options?: Settings) {\n    const url = this.parseEndpoint(endpoint);\n    const parsedOptions = this.parseOptions({\n      method: 'post',\n      data,\n      ...options,\n    });\n    return this.request(url, parsedOptions);\n  }\n\n  public async put(endpoint: string, data: Data, options?: Settings) {\n    const url = this.parseEndpoint(endpoint);\n    const parsedOptions = this.parseOptions({\n      method: 'put',\n      data,\n      ...options,\n    });\n    return this.request(url, parsedOptions);\n  }\n\n  public async patch(endpoint: string, data: Data, options?: Settings) {\n    const url = this.parseEndpoint(endpoint);\n    const parsedOptions = this.parseOptions({\n      method: 'patch',\n      data,\n      ...options,\n    });\n    return this.request(url, parsedOptions);\n  }\n\n  public async delete(endpoint: string, options?: Settings) {\n    const url = this.parseEndpoint(endpoint);\n    const parsedOptions = this.parseOptions({\n      method: 'delete',\n      ...options,\n    });\n    return this.request(url, parsedOptions);\n  }\n\n  public async download(endpoint: string, options?: Settings) {\n    const url = this.parseEndpoint(endpoint);\n    window.open(url, '_blank');\n\n    const parsedOptions = this.parseOptions({\n      method: 'get',\n      ...options,\n    });\n    return this.request(url, parsedOptions);\n  }\n}\n\nexport default ApiServiceImpl;\n","import * as React from 'react';\nimport ApiServiceImpl from '../services/api.service';\n\nconst apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:3000/api';\nconst apiService = new ApiServiceImpl(apiUrl);\n\nexport const ApiContext = React.createContext({} as ApiServiceImpl);\n\nconst ApiContextProvider: React.FC = (props) => {\n  const { children } = props;\n  return (\n    <ApiContext.Provider value={apiService}>{children}</ApiContext.Provider>\n  );\n};\n\nexport default ApiContextProvider;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useContext, useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { ApiContext } from '../../contexts/apiContextProvider';\n\nconst Container = styled.div`\n  max-width: 800px;\n  max-height: 600px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 4px;\n  background-color: snow;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: scale-down;\n  overflow: hidden;\n`;\n\nconst Gallery: React.FunctionComponent<{ selectedImageId: number }> = (\n  props\n) => {\n  const apiService = useContext(ApiContext);\n  const [image, setImage] = useState<any>();\n  const { selectedImageId } = props;\n\n  const getImage = useCallback(async () => {\n    try {\n      const images = await apiService.get(`/image/${selectedImageId}`);\n      const buffer = images.data.imagefile.Body.data;\n      const b64 = Buffer.from(buffer).toString('base64');\n      const mimeType = images.data.imagefile.ContentType;\n      return setImage({ b64, mimeType });\n    } catch (err) {\n      return console.log(err);\n    }\n  }, [apiService, selectedImageId]);\n\n  useEffect(() => {\n    getImage();\n  }, [getImage]);\n\n  return (\n    <Container>\n      <div>\n        {image && (\n          <Image alt=\"\" src={`data:${image.mimeType};base64,${image.b64}`} />\n        )}\n      </div>\n    </Container>\n  );\n};\n\nexport default Gallery;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled from 'styled-components';\nimport React, { useContext, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { NavDropdown } from 'react-bootstrap';\nimport { useAppSelector, useAppDispatch } from '../redux/hooks';\nimport { ApiContext } from '../contexts/apiContextProvider';\n\nconst StyledNav = styled.nav`\n  z-index: 1;\n  border-bottom: solid;\n  border-bottom-width: 1px;\n  border-color: lightgray;\n`;\n\nconst Text = styled.div`\n  color: darkslategray;\n`;\n\nconst BlueText = styled.div`\n  color: steelblue;\n  font-style: bold;\n`;\n\nconst Nav = () => {\n  const auth = useAppSelector((state) => state.auth);\n  const dispatch = useAppDispatch();\n  const apiService = useContext(ApiContext);\n  const logout = useCallback(async () => {\n    try {\n      await apiService.post('/auth/logout', {});\n      dispatch({ type: 'LOGOUT' });\n    } catch (err) {\n      console.log(err);\n    }\n  }, [dispatch]);\n  return (\n    <StyledNav className=\"navbar navbar-dark navbar-expand-lg\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"navbar-brand text\">\n          <Text>InstaPic</Text>\n        </Link>\n\n        <div className=\"collpase navbar-collapse\">\n          {!auth.authenticated && (\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"navbar-item\">\n                <Link to=\"/login\" className=\"nav-link\">\n                  <BlueText>Log In</BlueText>\n                </Link>\n              </li>\n              <li className=\"navbar-item\">\n                <Link to=\"/signup\" className=\"nav-link\">\n                  <Text>Sign Up</Text>\n                </Link>\n              </li>\n            </ul>\n          )}\n          {auth.authenticated && (\n            <ul className=\"navbar-nav ml-auto\">\n              <NavDropdown\n                id=\"nav\"\n                title={<span className=\"text-primary\">{auth.username}</span>}\n                className=\"nav-item dropdown\"\n              >\n                <NavDropdown.Item onClick={() => logout()}>\n                  Sign Out\n                </NavDropdown.Item>\n              </NavDropdown>\n            </ul>\n          )}\n        </div>\n      </div>\n    </StyledNav>\n  );\n};\n\nexport default Nav;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext, useCallback, useState } from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\nimport { ApiContext } from '../../contexts/apiContextProvider';\nimport { SignUp } from '../../types/user.type';\n\nconst FormSection = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 4rem;\n`;\n\nconst InsideContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.span`\n  font-size: 30px;\n  margin-bottom: 2rem;\n`;\n\nconst SignUpPage: React.FunctionComponent = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<SignUp>();\n  const apiService = useContext(ApiContext);\n  const auth = useAppSelector((state) => state.auth);\n  const dispatch = useAppDispatch();\n  const [failed, setFailed] = useState(false);\n\n  const onSubmit: SubmitHandler<SignUp> = useCallback(\n    async (data: SignUp) => {\n      const { password, username } = data;\n      try {\n        setFailed(false);\n        await apiService.post('/auth/signup', {\n          username,\n          password,\n        });\n        const user = await apiService.post('/auth/login', {\n          username,\n          password,\n        });\n        if (user) {\n          dispatch({ type: 'LOGIN', payload: { username } });\n        }\n      } catch (err) {\n        setFailed(true);\n        console.log(err);\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <Container>\n      <InsideContainer>\n        <Header>Sign Up</Header> {auth.authenticated && <Redirect to=\"/\" />}\n        {!auth.authenticated && (\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <FormSection>\n              <div>\n                <div className=\"form-group column\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    className=\"form-control\"\n                    id=\"username\"\n                    {...register('username', { required: 'Username required' })}\n                  />\n                  {errors.username && (\n                    <p\n                      style={{ color: 'red', fontSize: '14px' }}\n                      className=\"my-2\"\n                    >\n                      {errors.username.message}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"form-group column\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    className=\"form-control\"\n                    id=\"password\"\n                    type=\"password\"\n                    {...register('password', { required: 'Password required' })}\n                  />\n                  {errors.password && (\n                    <p\n                      style={{ color: 'red', fontSize: '14px' }}\n                      className=\"my-2\"\n                    >\n                      {errors.password.message}\n                    </p>\n                  )}\n                </div>\n              </div>\n            </FormSection>\n\n            <FormSection>\n              <Button type=\"submit\" size=\"sm\">\n                Sign Up\n              </Button>\n            </FormSection>\n            {failed && (\n              <p style={{ color: 'red', fontSize: '14px' }} className=\"my-2\">\n                Sign up failed, please try again\n              </p>\n            )}\n          </form>\n        )}\n      </InsideContainer>\n    </Container>\n  );\n};\n\nexport default SignUpPage;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useContext, useCallback, useState } from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../../redux/hooks';\nimport { ApiContext } from '../../contexts/apiContextProvider';\nimport { Login } from '../../types/user.type';\n\nconst FormSection = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 4rem;\n`;\n\nconst InsideContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.span`\n  font-size: 30px;\n  margin-bottom: 2rem;\n`;\n\nconst LoginPage: React.FunctionComponent = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Login>();\n  const apiService = useContext(ApiContext);\n  const auth = useAppSelector((state) => state.auth);\n  const dispatch = useAppDispatch();\n  const [failed, setFailed] = useState(false);\n\n  const onSubmit: SubmitHandler<Login> = useCallback(\n    async (data: Login) => {\n      const { username, password } = data;\n      try {\n        setFailed(false);\n        const user = await apiService.post('/auth/login', {\n          username,\n          password,\n        });\n        if (user) {\n          dispatch({ type: 'LOGIN', payload: { username } });\n        }\n      } catch (err) {\n        setFailed(true);\n        console.log(err);\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <Container>\n      <InsideContainer>\n        <Header>Log In</Header>\n        {auth.authenticated && <Redirect to=\"/\" />}\n        {!auth.authenticated && (\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <FormSection>\n              <div>\n                <div className=\"form-group column\">\n                  <label htmlFor=\"username\">Username</label>\n                  <input\n                    className=\"form-control\"\n                    id=\"username\"\n                    {...register('username', { required: 'Username required' })}\n                  />\n                  {errors.username && (\n                    <p\n                      style={{ color: 'red', fontSize: '14px' }}\n                      className=\"my-2\"\n                    >\n                      {errors.username.message}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"form-group column\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    className=\"form-control\"\n                    id=\"password\"\n                    type=\"password\"\n                    {...register('password', { required: 'Password required' })}\n                  />\n                  {errors.password && (\n                    <p\n                      style={{ color: 'red', fontSize: '14px' }}\n                      className=\"my-2\"\n                    >\n                      {errors.password.message}\n                    </p>\n                  )}\n                </div>\n              </div>\n            </FormSection>\n\n            <FormSection>\n              <Button type=\"submit\" size=\"sm\">\n                Log In\n              </Button>\n            </FormSection>\n            {failed && (\n              <p style={{ color: 'red', fontSize: '14px' }} className=\"my-2\">\n                Log in failed, please try again\n              </p>\n            )}\n          </form>\n        )}\n      </InsideContainer>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","/* eslint-disable no-nested-ternary */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport {\n  useTable,\n  useGlobalFilter,\n  useFilters,\n  useSortBy,\n  usePagination,\n} from 'react-table';\nimport styled from 'styled-components';\n\nconst Headers = styled.thead`\n  padding-top: 12px;\n  padding-bottom: 12px;\n  text-align: left;\n  background-color: deepskyblue;\n  color: white;\n`;\n\nconst Cell = styled.td`\n  overflow: hidden;\n  border: solid 0.4px lightgrey;\n`;\n\nconst Row = styled.tr`\n  min-width: 400px;\n  cursor: pointer;\n  :hover {\n    background-color: #ddd;\n  }\n  :nth-child(even) {\n    background-color: #f2f2f2;\n  }\n`;\n\nconst Table = styled.table`\n  border-spacing: 50px 0;\n  table-layout: fixed;\n  width: clamp(400px, 800px, 1200px);\n`;\n\nconst ImageTable: React.FC<any> = ({ data, setSelectedImageId }): any => {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Name',\n        accessor: 'filename',\n      },\n      {\n        Header: 'Description',\n        accessor: 'description',\n      },\n      {\n        Header: 'Created By',\n        accessor: 'user.username',\n      },\n      {\n        Header: 'Created At',\n        accessor: 'createdAt',\n      },\n    ],\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0 },\n    },\n    useGlobalFilter,\n    useFilters,\n    useSortBy,\n    usePagination\n  );\n\n  return (\n    <div className=\"py-4\">\n      <Table {...getTableProps()}>\n        <Headers>\n          {headerGroups.map((headerGroup: any) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column: any) => (\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>\n                  {column.render('Header')}\n                  <span>\n                    {column.isSorted\n                      ? column.isSortedDesc\n                        ? ' 🔽'\n                        : ' 🔼'\n                      : ''}\n                  </span>\n                </th>\n              ))}\n            </tr>\n          ))}\n        </Headers>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row: any) => {\n            prepareRow(row);\n            return (\n              <Row\n                {...row.getRowProps()}\n                onClick={() => {\n                  setSelectedImageId(row.original.id);\n                }}\n              >\n                {row.cells.map((cell: any) => {\n                  return (\n                    <Cell {...cell.getCellProps()}>{cell.render('Cell')}</Cell>\n                  );\n                })}\n              </Row>\n            );\n          })}\n        </tbody>\n      </Table>\n\n      <div className=\"pagination p-2\">\n        <button\n          type=\"button\"\n          onClick={() => gotoPage(0)}\n          disabled={!canPreviousPage}\n        >\n          {'<<'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => previousPage()}\n          disabled={!canPreviousPage}\n        >\n          {'<'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => nextPage()}\n          disabled={!canNextPage}\n        >\n          {'>'}\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => gotoPage(pageCount - 1)}\n          disabled={!canNextPage}\n        >\n          {'>>'}\n        </button>\n        <span>\n          Page\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>\n        </span>\n        <span>\n          | Go to page:\n          <input\n            type=\"number\"\n            defaultValue={pageIndex + 1}\n            onChange={(e) => {\n              const newpage = e.target.value ? Number(e.target.value) - 1 : 0;\n              gotoPage(newpage);\n            }}\n            style={{ width: '100px' }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={(e) => {\n            setPageSize(Number(e.target.value));\n          }}\n        >\n          {[10, 20, 30, 40, 50].map((pageSizes) => (\n            <option key={pageSizes} value={pageSizes}>\n              Show {pageSizes}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageTable;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useEffect, useContext, useState, useCallback } from 'react';\nimport { useForm, SubmitHandler } from 'react-hook-form';\nimport styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\nimport { ApiContext } from '../../contexts/apiContextProvider';\nimport { useAppSelector } from '../../redux/hooks';\nimport Table from './Table';\nimport Gallery from './Gallery';\n\nconst FormSection = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Frame = styled.div`\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Container = styled.div`\n  max-width: 800px;\n  display: flex;\n  justify-content: center;\n  margin-top: 2rem;\n  margin-left: 0.4rem;\n  margin-right: 0.4rem;\n`;\n\nconst HomePage: React.FunctionComponent = () => {\n  const { register, handleSubmit } = useForm<any>();\n  const apiService = useContext(ApiContext);\n  const auth = useAppSelector((state) => state.auth);\n\n  const [imageData, setImageData] = useState<any[]>();\n  const [loading, setLoading] = useState(false);\n  const [selectedImageId, setSelectedImageId] = useState<number>(1);\n  const [failed, setFailed] = useState(false);\n\n  const getStaticData = useCallback(async () => {\n    try {\n      setLoading(false);\n      const images = await apiService.get('/image');\n      return setImageData(images.data.images);\n    } catch (err) {\n      return console.log(err);\n    }\n  }, [apiService, loading]);\n\n  useEffect(() => {\n    getStaticData();\n  }, [getStaticData]);\n\n  const onSubmit: SubmitHandler<any> = async (data) => {\n    try {\n      setFailed(false);\n      const formData = new FormData();\n      formData.append('file', data.file[0]);\n      formData.append('description', data.description);\n      const res = await apiService.post('/image/upload', formData, {\n        contentType: 'multipart/form-data',\n      });\n      setSelectedImageId(res.data.id);\n      setLoading(true);\n    } catch (err) {\n      setFailed(true);\n      console.log(err);\n    }\n  };\n\n  return (\n    <Frame>\n      <Container>\n        {!auth.authenticated && (\n          <span>Please sign up or log in to view images!</span>\n        )}\n        {auth.authenticated && (\n          <FormSection>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <FormSection className=\"form-group\">\n                <input\n                  className=\"form-control my-2\"\n                  id=\"file\"\n                  type=\"file\"\n                  accept=\"image/x-png,image/jpeg,image/gif\"\n                  {...register('file')}\n                />\n                <input\n                  className=\"form-control my-2\"\n                  id=\"description\"\n                  placeholder=\"Description...\"\n                  {...register('description')}\n                />\n                <div>\n                  <Button type=\"submit\" size=\"sm\" className=\"my-2\">\n                    Upload Image\n                  </Button>\n                </div>\n                <label htmlFor=\"file\" className=\"mb-4\">\n                  File types accepted: PNG, JPEG and GIF\n                </label>\n                {failed && (\n                  <p\n                    style={{ color: 'red', fontSize: '14px' }}\n                    className=\"my-2\"\n                  >\n                    Image upload failed\n                  </p>\n                )}\n              </FormSection>\n              <Gallery selectedImageId={selectedImageId} />\n            </form>\n            {imageData && (\n              <Table data={imageData} setSelectedImageId={setSelectedImageId} />\n            )}\n          </FormSection>\n        )}\n      </Container>\n    </Frame>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Nav } from './components';\nimport { SignUp, LogIn, Home } from './pages';\n\nfunction App() {\n  return (\n    <Router>\n      <Nav />\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/login\" exact component={LogIn} />\n      <Route path=\"/signup\" exact component={SignUp} />\n    </Router>\n  );\n}\n\nexport default App;\n","export const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\n","import { AnyAction } from 'redux';\nimport { LOGIN, LOGOUT } from '../actionTypes';\n\ninterface Auth {\n  authenticated: boolean;\n  username: string | null;\n}\n\nconst initialState: Auth = {\n  authenticated: false,\n  username: null,\n};\n\nconst auth = function (state = initialState, action: AnyAction) {\n  switch (action.type) {\n    case LOGIN: {\n      const { username } = action.payload;\n      return {\n        authenticated: true,\n        username,\n      };\n    }\n    case LOGOUT: {\n      return {\n        authenticated: false,\n        username: null,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default auth;\n","import { combineReducers } from 'redux';\nimport auth from './auth';\n\nexport default combineReducers({ auth });\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport ApiContextProvider from './contexts/apiContextProvider';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ApiContextProvider>\n        <App />\n      </ApiContextProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}